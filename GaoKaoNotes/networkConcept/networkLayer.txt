#############################################################################################################
1. IP 地址:
	A. 32位元(bit)組成, 或也可以說 4位元組(byte)
	B. 10進制表示
	C. 通常8位元(bit)一組
	D. 範例: 192.168.1.1
	E. 總數只有: 2^32 ~ 42億
	F. 他是根據"地區(或是組織)"劃分的地址, 不可重複
	G. 不夠用, 需要NAT

#############################################################################################################
2. IP 封包(packet), 以下是組成, 照順序
	A. header:
		a. 東西太多了, 跳過一些
		b. source IP address:
			I. 4 byte
		c. destination IP address
			I. 4 byte

	B. data: 包含其他層的內容

#############################################################################################################
3. 路由(routing)
	A. ARP(Address resolution protocol)
		a. 網路卡只認識MAC不認識IP, 你傳IP她看不懂
		b. 從IP找對應的MAC
		c. 每一台電腦都維護自己的ARP表
		d. ARP表中沒有對應IP MAC對, 則廣播尋找
		e. ARP攻擊
			I. 需求者廣播循址
			II. 攻擊者收到後, 連續發出假的回應(一般不會回應)
			III. 是一種LAN的攻擊手段, 通常攻擊者會假裝自己是gateway(因為需求通常都通向gateway)
	
	B. 所謂路由其實就是目的地址:X.X.X.X, 那我當下要去哪裡可以連到, 有可能是b.b.b.b		

	C. 路由器(router)
		a. 路由器的定義
			I. node ----- a device that implements IPv6(or IPv4)
			II. router ----- a node that forwards IPv6(or IPv4) packets not explicitly addressed to itself.
			III. host ----- any node that is not a router
		
		b. 一台路由器可能會連接很多不同的子網路, 再不同的子網路裡該路由器都會有一個屬於自己的IP, 所以一台路由器可能會有很多IP(注意! 這個本來就是可能的, 只有MAC地址才是只能有一個, 除非你有兩張網路卡)

	C. 路由表(routing table), 裡面有三種協議的路由

		若是忘記原理的話, 看以下的影片, 會秒懂:
			https://www.youtube.com/watch?v=AzXys5kxpAM

		a. 直連路由(direct)
			I. router與destination同一個子網路!
			III. 你不需要手動設定, 因為同一個網路, 直接就可以知道

		b. 靜態路由(static)
			I. 非direct的狀況, 你可以手動設定下一跳的IP, 只要該IP與你共處同一子網路
			II. 需人工手動維護
		
		c. 動態路由(dynamic), 若是非direct, 又嫌static太麻煩, 可以選擇設定以下協議:
			I. RIP(Routing Information Protocol)
				🤔. 使用情況:
					😄. 使用較小的網路,  由於速度較慢, 漸漸被OSPF取代, 有明顯缺點如下:
						😊. 收敛慢
						😊. 易产生路由环路
						😊. 可扩展性差，最大只能支持15跳
						
				🤔. 採用距離向量算法(distance-vector routing, DV routing)
					😄. Bellman-Ford Algorithm(是一種dynamic programming, 計算較慢, 但準)
						😊. 詳細算法參考以下:
						https://www.youtube.com/watch?v=hdpnoOcrGck
						https://my.eng.utah.edu/~cs5480/notes/chapter4-2007-Part2.pdf

				🤔. DV routing有機會發生Looping 異常, 原理如下:
					A, B, C三台路由器, 形成三角互聯
					A想發packet給C, 根據A的路由表顯示, B可以到達C. 於是A把packet發給B, B接收packet後, 查詢自己的路由表, 發現到C的最優路徑是A, 於是又把packet發給A, 來來往往, 變成loop. 會發生這樣的原因, 有可能來自C 壞掉了, 但是壞掉的通知傳送的慢, 因為A需要透過B才能到達C(可見C到A的距離是比到B還更遠), 所以B會先收到C壞掉了, B-C距離改成infinity, 路由變成B要到C需要經過A, 然後就形成loop了.
					😄. 解法1: 水平分離切口(Split Horizon Hack)
					😄. 解法2: 暫停(Hold Down)
			
			II. ISIS(Intermediate System to Intermediate System)
				🤔. 使用狀況:
					😄. 適用於中等網路, 靈活度和可擴展性都很不錯

				🤔. 链路状态算法
					😄. Dijsktra Algorithm (是一種greedy approach, 計算較快, 但沒那麼準)
						😊. 詳細算法參考以下:
						https://www.freecodecamp.org/chinese/news/dijkstras-shortest-path-algorithm-visual-introduction/
						https://zhuanlan.zhihu.com/p/129373740

			III. OSPF(Open Shortest Path First)
				🤔. 使用狀況:
					😄. 適用較大的網路, 使用情形非常活耀, 很受歡迎
				🤔. 链路状态算法
					😄. Dijsktra算法 (是一種greedy approach, 計算較快, 但沒那麼準)			
				
			IIII. BGP(Border Gateway Protocol)
				🤔. 使用狀況:
					😄. 適用超大的網路, 
						😊. 互联网路由(為全球互聯網提供重要的作用)
						😊. 跨国公司网络
						😊. 多地域的云服务提供商
						😊. 网络架构中的边界控制
				🤔. 採用路徑向量算法(path-vector routing, PV routing)
			
